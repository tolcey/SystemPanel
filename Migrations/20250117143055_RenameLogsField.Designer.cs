// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SystemPanel.Data;

#nullable disable

namespace SystemPanel.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250117143055_RenameLogsField")]
    partial class RenameLogsField
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArizaTalep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArizaDetay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArizaTuru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cevap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CevapTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("CevaplayanIsim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CevaplayanSicil")
                        .HasColumnType("int");

                    b.Property<int?>("Durumu")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Havale")
                        .HasColumnType("int");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resim1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resim2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resim3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resim4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SnrkMsjTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TalepBirimTuru")
                        .HasColumnType("int");

                    b.Property<string>("TalepBuro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TalepEdenAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TalepEdenRutbe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TalepEdenSoyadi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TalepEdenTelefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TalepIl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TalepIlce")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TalepSicil")
                        .HasColumnType("int");

                    b.Property<string>("TalepSube")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ArizaTalepler");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SystemPanel.Models.Birim", b =>
                {
                    b.Property<int>("BirimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BirimId"));

                    b.Property<string>("BirimAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BirimKodu")
                        .HasColumnType("int");

                    b.Property<int?>("Subesi")
                        .HasColumnType("int");

                    b.HasKey("BirimId");

                    b.ToTable("Birimler");
                });

            modelBuilder.Entity("SystemPanel.Models.BrmTlpTurleri", b =>
                {
                    b.Property<int>("TLP_tur_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TLP_tur_id"));

                    b.Property<int?>("TLP_birim_id")
                        .HasColumnType("int");

                    b.Property<string>("TLP_tur_adi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TLP_tur_id");

                    b.ToTable("BrmTlpTurleri");
                });

            modelBuilder.Entity("SystemPanel.Models.Duyuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Birimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resim1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resim2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resim3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resim4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Turu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Yazan")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Duyurular");
                });

            modelBuilder.Entity("SystemPanel.Models.HataLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Birimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HataDetay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Kullanici")
                        .HasColumnType("int");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OlayTuru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sayfa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("LogId");

                    b.ToTable("HataLoglar");
                });

            modelBuilder.Entity("SystemPanel.Models.Havale", b =>
                {
                    b.Property<int>("HavaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HavaleId"));

                    b.Property<int?>("HavaleEden")
                        .HasColumnType("int");

                    b.Property<int?>("HavaleEdilen")
                        .HasColumnType("int");

                    b.Property<string>("HavaleNot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HavaleTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Onay")
                        .HasColumnType("int");

                    b.Property<string>("OnayNotu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OnayTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Onaylayan")
                        .HasColumnType("int");

                    b.Property<int?>("TalepId")
                        .HasColumnType("int");

                    b.HasKey("HavaleId");

                    b.HasIndex("TalepId");

                    b.ToTable("Havaleler");
                });

            modelBuilder.Entity("SystemPanel.Models.HavaleYetkisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HavaleSahisId")
                        .HasColumnType("int");

                    b.Property<int?>("Sicil")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HavaleYetkileri");
                });

            modelBuilder.Entity("SystemPanel.Models.IslemLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Birimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IslemDetay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IslemTuru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IslemiYapan")
                        .HasColumnType("int");

                    b.Property<string>("IslemiYapanBirimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sayfa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sorgulanan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("LogId");

                    b.ToTable("IslemLoglar");
                });

            modelBuilder.Entity("SystemPanel.Models.LogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LogEntries");
                });

            modelBuilder.Entity("SystemPanel.Models.MapUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MapUnits");
                });

            modelBuilder.Entity("SystemPanel.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("SystemPanel.Models.SccmLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SccmLogs");
                });

            modelBuilder.Entity("SystemPanel.Models.Sms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GidenGrup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icerik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Smsler");
                });

            modelBuilder.Entity("SystemPanel.Models.SmsGidenler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Kime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sicil")
                        .HasColumnType("int");

                    b.Property<int?>("SmsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SmsGidenler");
                });

            modelBuilder.Entity("SystemPanel.Models.TalepCevap", b =>
                {
                    b.Property<int>("CevapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CevapId"));

                    b.Property<string>("Cevap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CevapTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("CevaplayanIsim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CevaplayanSicil")
                        .HasColumnType("int");

                    b.Property<int>("TalepId")
                        .HasColumnType("int");

                    b.HasKey("CevapId");

                    b.HasIndex("TalepId");

                    b.ToTable("TalepCevaplar");
                });

            modelBuilder.Entity("SystemPanel.Models.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyadi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Testler");
                });

            modelBuilder.Entity("SystemPanel.Models.TreeIl", b =>
                {
                    b.Property<int>("SayfaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SayfaId"));

                    b.Property<string>("Root")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SayfaAd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SayfaId");

                    b.ToTable("TreeIller");
                });

            modelBuilder.Entity("SystemPanel.Models.Yetki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Havale")
                        .HasColumnType("int");

                    b.Property<int?>("Sicil")
                        .HasColumnType("int");

                    b.Property<string>("Tanim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YetkiTuru")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Yetkiler");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemPanel.Models.Havale", b =>
                {
                    b.HasOne("ArizaTalep", null)
                        .WithMany()
                        .HasForeignKey("TalepId");
                });

            modelBuilder.Entity("SystemPanel.Models.TalepCevap", b =>
                {
                    b.HasOne("ArizaTalep", null)
                        .WithMany()
                        .HasForeignKey("TalepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
